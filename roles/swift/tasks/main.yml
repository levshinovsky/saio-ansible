
  - name: assure /srv directory exists
    file: path=/srv state=directory

  - name: create loopback device
    command: truncate -s 1GB /srv/swift-disk creates=/srv/swift-disk

  - name: create filesystem /srv/swift-disk
    sudo: yes
    filesystem: fstype=xfs dev=/srv/swift-disk

  - name: create mount path /mnt/sdb1
    file: path=/mnt/sdb1 state=directory

  - name: mount /mnt/sdb1
    mount: name=/mnt/sdb1 src=/srv/swift-disk fstype=xfs opts="loop,noatime,nodiratime,nobarrier,logbufs=8" dump=0 passno=0 state=mounted

  - name: create sub-partitions
    file: >
      path=/mnt/sdb1/{{ item }}
      state=directory
      owner={{ username }}
      group={{ group }}
    with_items:
      - 1
      - 2
      - 3
      - 4

  - name: create symlinks
    sudo: yes
    file: >
      src=/mnt/sdb1/{{ item }}
      dest=/srv/{{ item }}
      owner={{ username }}
      group={{ group }}
      state=link
    with_items:
      - 1
      - 2
      - 3
      - 4

  - name: create node partition directories
    file: >
      path=/srv/{{ item[1] }}/node/sdb{{ item[0] + item[1] }}
      owner={{ username }}
      group={{ group }}
      state=directory
    with_nested:
      - [0, 4]
      - [1, 2, 3, 4]

  - name: create /var/run/swift
    file: >
      path=/var/run/swift
      owner={{ username }}
      group={{ group }}
      state=directory

  - name: create rc.local from template
    template: src=rc.local.j2 dest=/etc/rc.d/rc.local owner=root group=root mode=0755

  - name: assure /vagrant/source directory exists
    file: path={{ source_dir }} state=directory

  - name: check if swift is already cloned
    stat: path={{ source_dir }}/swift
    register: swift_cloned

  - name: git clone swift
    git: repo=https://github.com/openstack/swift.git dest={{ source_dir }}/swift
    when: not swift_cloned.stat.exists

  - name: add gerrit repo to swift clone
    #git: repo=ssh://{{ openstack_username }}@review.openstack.org:29418/openstack/swift.git dest=/home/{{ username }}/swift remote=gerrit accept_hostkey=True
    command: git remote add gerrit ssh://{{ openstack_username }}@review.openstack.org:29418/openstack/swift.git chdir={{ source_dir }}/swift
    when: configure_gerrit and not swift_cloned.stat.exists

  - name: install swift's dependencies
    pip: requirements={{ source_dir }}/swift/requirements.txt

  - name: install swift's test dependencies
    pip: requirements={{ source_dir }}/swift/test-requirements.txt

  - name: build a development installation of swift
    command: python setup.py develop chdir={{ source_dir }}/swift

  - name: check if python-swiftclient is already cloned
    stat: path={{ source_dir }}/python-swiftclient
    register: swiftclient_cloned

  - name: git clone python-swiftclient
    git: repo=https://github.com/openstack/python-swiftclient.git dest={{ source_dir }}/python-swiftclient
    when: not swiftclient_cloned.stat.exists

  - name: build a development installation of python-swiftclient
    command: python setup.py develop chdir={{ source_dir }}/python-swiftclient

  - name: set correct ownership of repos
    file: path={{ source_dir }}/{{ item }} owner={{ username }} group={{ group }} recurse=yes
    with_items:
      - swift
      - python-swiftclient

  - name: create /etc/rsyncd.conf
    command: cp {{ source_dir }}/swift/doc/saio/rsyncd.conf /etc/

  - name: update rsyncd.conf with correct username
    replace: dest=/etc/rsyncd.conf regexp=<your-user-name> replace={{ username }}

  - name: enable rsync
    lineinfile: dest=/etc/xinetd.d/rsync line="disable = no" create=yes

  - name: set selinux to permissive
    selinux: policy=targeted state=disabled

  - name: restart rsync
    service: name=rsyncd state=restarted enabled=yes

  - name: start memcache
    service: name=memcached state=started enabled=yes
